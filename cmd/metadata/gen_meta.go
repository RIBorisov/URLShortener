// Package metadata shares info about the application, such as commit, version and build time.
package main

import (
	"fmt"
	"log"
	"os"
	"time"
)

func main() {
	const na = "N/A"
	const filename = "metadata.go"
	version := os.Getenv("BUILD_VERSION")
	if version == "" {
		version = na
	}
	commit := os.Getenv("BUILD_COMMIT")
	if commit == "" {
		commit = na
	}

	date := time.Now().Format(time.DateTime)
	if date == "" {
		date = na
	}

	code := fmt.Sprintf(`// Code generated by go generate; DO NOT EDIT.
package main
var (
	buildVersion = "%s"
	buildDate    = "%s"
	buildCommit  = "%s"
)`, version, date, commit)

	file, err := os.Create(filename)
	if err != nil {
		log.Printf("failed to create file: %s, %+v\n", filename, err)
		return
	}
	defer func() {
		if err = file.Close(); err != nil {
			log.Printf("failed to close file: %s, %+v\n", filename, err)
		}
	}()

	if _, err = file.WriteString(code); err != nil {
		log.Printf("failed to write into the file: %s, %+v\n", filename, err)
	}
}
